{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chanchalagorale/Documents/react-mongo-next-project/frontend/components/form/ContactForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport Link from \"next/link\";\nimport { emailContactForm } from \"../../actions/form\";\n\nconst ContactForm = ({\n  authorEmail\n}) => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    message: \"\",\n    name: \"\",\n    email: \"\",\n    sent: false,\n    buttonText: \"Send Message\",\n    success: false,\n    error: false\n  });\n  const {\n    message,\n    name,\n    email,\n    sent,\n    buttonText,\n    success,\n    error\n  } = values;\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      buttonText: \"Sending...\"\n    }));\n    emailContactForm({\n      authorEmail,\n      name,\n      email,\n      message\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          sent: true,\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          buttonText: \"Sent\",\n          success: data.success\n        }));\n      }\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value,\n      error: false,\n      success: false,\n      buttonText: \"Send Message\"\n    }));\n  };\n\n  const showSuccessMessage = () => success && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    children: \"Thank you for contacting us.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n\n  const showErrorMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n\n  const contactForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: clickSubmit,\n      className: \"pb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange(\"message\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: message,\n          required: true,\n          rows: \"10\",\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange(\"name\"),\n          className: \"form-control\",\n          value: name,\n          required: true,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"lead\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: handleChange(\"email\"),\n          className: \"form-control\",\n          value: email,\n          required: true,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showSuccessMessage(), showErrorMessage(), contactForm()]\n  }, void 0, true);\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/chanchalagorale/Documents/react-mongo-next-project/frontend/components/form/ContactForm.js"],"names":["useState","Link","emailContactForm","ContactForm","authorEmail","values","setValues","message","name","email","sent","buttonText","success","error","clickSubmit","e","preventDefault","then","data","handleChange","target","value","showSuccessMessage","showErrorMessage","display","contactForm"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Link from \"next/link\";\nimport { emailContactForm } from \"../../actions/form\";\n\nconst ContactForm = ({ authorEmail }) => {\n  const [values, setValues] = useState({\n    message: \"\",\n    name: \"\",\n    email: \"\",\n    sent: false,\n    buttonText: \"Send Message\",\n    success: false,\n    error: false,\n  });\n\n  const { message, name, email, sent, buttonText, success, error } = values;\n\n  const clickSubmit = (e) => {\n    e.preventDefault();\n    setValues({ ...values, buttonText: \"Sending...\" });\n    emailContactForm({ authorEmail, name, email, message }).then((data) => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          sent: true,\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          buttonText: \"Sent\",\n          success: data.success,\n        });\n      }\n    });\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({\n      ...values,\n      [name]: e.target.value,\n      error: false,\n      success: false,\n      buttonText: \"Send Message\",\n    });\n  };\n\n  const showSuccessMessage = () =>\n    success && (\n      <div className=\"alert alert-info\">Thank you for contacting us.</div>\n    );\n\n  const showErrorMessage = () => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? \"\" : \"none\" }}\n    >\n      {error}\n    </div>\n  );\n\n  const contactForm = () => {\n    return (\n      <form onSubmit={clickSubmit} className=\"pb-5\">\n        <div className=\"form-group\">\n         \n          <textarea\n            onChange={handleChange(\"message\")}\n            type=\"text\"\n            className=\"form-control\"\n            value={message}\n            required\n            rows=\"10\"\n            placeholder=\"Message\"\n          ></textarea>\n        </div>\n\n        <div className=\"form-group\">\n          \n          <input\n            type=\"text\"\n            onChange={handleChange(\"name\")}\n            className=\"form-control\"\n            value={name}\n            required\n            placeholder=\"Name\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"lead\">Email</label>\n          <input\n            type=\"email\"\n            onChange={handleChange(\"email\")}\n            className=\"form-control\"\n            value={email}\n            required\n            placeholder=\"Email\"\n          />\n        </div>\n\n        <div>\n          <button className=\"btn btn-primary\">{buttonText}</button>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <>\n      {showSuccessMessage()}\n      {showErrorMessage()}\n      {contactForm()}\n    </>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}