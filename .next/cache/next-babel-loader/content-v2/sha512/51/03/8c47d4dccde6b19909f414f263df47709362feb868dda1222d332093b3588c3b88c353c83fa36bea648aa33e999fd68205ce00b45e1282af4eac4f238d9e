{"ast":null,"code":"import fetch from \"isomorphic-fetch\";\nimport cookie from \"js-cookie\";\nimport { API } from \"../config\";\nimport axio from \"axios\";\nexport const signup = user => {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/signup',\n    data: {\n      name: 'Finn',\n      email: ''\n    }\n  }); // fetch(\n  //   \"http://localhost:8000/api/signup\",\n  //   { mode: \"no-cors\" },\n  //   {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       \"Access-Control-Allow-Origin\": \"*\",\n  //     },\n  //     body: JSON.stringify(user),\n  //   }\n  // );\n  // )\n  //   .then((response) => {\n  //     return response.json();\n  //   })\n  //   .catch((err) => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n  return fetch(`${API}/signout`, {\n    method: \"GET\"\n  }).then(response => {\n    console.log(\"signout success\");\n  }).catch(err => console.log(err));\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/chanchalagorale/Documents/react-mongo-next-project/frontend/actions/auth.js"],"names":["fetch","cookie","API","axio","signup","user","axios","method","url","data","name","email","signin","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signout","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport cookie from \"js-cookie\";\nimport { API } from \"../config\";\nimport axio from \"axios\";\n\nexport const signup = (user) => \n\n{\n  return axios({\n    method: 'post',\n  url: 'http://localhost:8000/api/signup',\n  data: {\n    name: 'Finn',\n    email: ''\n  }\n  })\n  \n  // fetch(\n  //   \"http://localhost:8000/api/signup\",\n  //   { mode: \"no-cors\" },\n  //   {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //       \"Access-Control-Allow-Origin\": \"*\",\n  //     },\n  //     body: JSON.stringify(user),\n  //   }\n  // );\n  // )\n  //   .then((response) => {\n  //     return response.json();\n\n  //   })\n  //   .catch((err) => console.log(err));\n};\n\nexport const signin = (user) => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const signout = (next) => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n\n  return fetch(`${API}/signout`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      console.log(\"signout success\");\n    })\n    .catch((err) => console.log(err));\n};\n\n// set cookie\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\nexport const removeCookie = (key) => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1,\n    });\n  }\n};\n// get cookie\nexport const getCookie = (key) => {\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n// localstorage\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const removeLocalStorage = (key) => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n// autheticate user by pass data to cookie and localstorage\nexport const authenticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\n\nexport const isAuth = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}